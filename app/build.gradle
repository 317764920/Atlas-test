group = 'com.cqxiaokang.atlas.test'
version = getEnvValue("versionName", "1.0.1");
def apVersion = getEnvValue("apVersion", "");

apply plugin: 'com.android.application'
apply plugin: 'com.taobao.atlas'
//apply plugin: 'com.neenbedankt.android-apt'

repositories {
    mavenLocal()
    jcenter()
}

android {
    signingConfigs {

        release {
            keyAlias 'cloudloan'
            keyPassword '123456'
            storeFile file('D:/StudioProjects/keystore/cloudLoan.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.cqxiaokang.atlas.test"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName version
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //  "\"http://192.168.120.218/api/v1/\""
            //  "\"http://test1.cqxiaokang.com/api/v1/\""
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

atlas {

    atlasEnabled true

    tBuildConfig {
        autoStartBundles = ['com.cqxiaokang.main'] //自启动bundle配置
        outOfApkBundles = ['remote']
    }


    patchConfigs {
        debug {
            createTPatch true
        }
        release {
            createTPatch true
        }
    }


    buildTypes {
        debug {
            if (apVersion) {
                baseApDependency "com.cqxiaokang.atlas.test:AP-debug:${apVersion}@ap"
                patchConfig patchConfigs.debug
            }
        }
        release {
            if (apVersion) {
                baseApDependency "com.cqxiaokang.atlas.test:AP-release:${apVersion}@ap"
                patchConfig patchConfigs.release
            }
        }
    }

}

dependencies {
    compile('com.taobao.android:atlas_core:5.0.6-rc51@aar') {
        transitive = true
    }
    //butterknife
//    compile 'com.jakewharton:butterknife:8.2.1'
//    apt 'com.jakewharton:butterknife-compiler:8.2.1'
//    compile 'com.jakewharton:butterknife:8.5.1'
//    apt 'com.jakewharton:butterknife-compiler:8.5.1'
    //6.0权限适配
//    compile 'com.zhy:mpermission-api:1.0.0'
//    apt 'com.zhy:mpermission-compiler:1.0.0'
    compile 'com.alibaba:fastjson:1.1.45.android@jar'
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.taobao.android:atlasupdate:1.1.4.8@aar'

    bundleCompile project(':main')
    bundleCompile project(':bug')
    bundleCompile project(':remote')

    compile project(':lib.style')

    compile fileTree(include: ['*.jar'], dir: 'libs')
}

static String getEnvValue(key, defValue) {
    def val = System.getProperty(key);
    if (null != val) {
        return val;
    }
    val = System.getenv(key);
    if (null != val) {
        return val;
    }
    return defValue;
}

tasks.whenTaskAdded { task ->
    if (task.name.contains("DebugAndroidTest")) {
        task.setEnabled(false);
    }
}

apply plugin: 'maven'
apply plugin: 'maven-publish'

publishing {
    repositories {
        mavenLocal()
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact "${project.buildDir}/outputs/apk/${project.name}-debug.ap"
            artifactId "AP-debug"
        }
    }
}
